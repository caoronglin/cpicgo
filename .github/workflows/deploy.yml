name: 自动部署到Cloudflare Workers

on:
  push:
    branches: [ main, master ]
  pull_request:
    branches: [ main, master ]
  workflow_dispatch:

jobs:
  deploy:
    runs-on: ubuntu-latest
    name: 部署图床服务
    
    steps:
      - name: 检出代码
        uses: actions/checkout@v4

      - name: 设置Node.js环境
        uses: actions/setup-node@v4
        with:
          node-version: '18'
          cache: 'npm'

      - name: 安装依赖
        run: npm ci

      - name: 配置Wrangler
        run: |
          echo "CLOUDFLARE_API_TOKEN=${{ secrets.CLOUDFLARE_API_TOKEN }}" >> $GITHUB_ENV
          echo "CLOUDFLARE_ACCOUNT_ID=${{ secrets.CLOUDFLARE_ACCOUNT_ID }}" >> $GITHUB_ENV

      - name: 部署到Cloudflare Workers
        run: npm run deploy
        env:
          CLOUDFLARE_API_TOKEN: ${{ secrets.CLOUDFLARE_API_TOKEN }}
          CLOUDFLARE_ACCOUNT_ID: ${{ secrets.CLOUDFLARE_ACCOUNT_ID }}

      - name: 设置环境变量
        run: |
          echo "${{ secrets.API_TOKEN }}" | wrangler secret put API_TOKEN
          echo "${{ secrets.USERNAME }}" | wrangler secret put USERNAME
          echo "${{ secrets.PASSWORD }}" | wrangler secret put PASSWORD
        env:
          CLOUDFLARE_API_TOKEN: ${{ secrets.CLOUDFLARE_API_TOKEN }}

      - name: 获取部署URL
        id: deployment
        run: |
          URL=$(wrangler dev --local-protocol https 2>/dev/null | grep -o 'https://[^[:space:]]*' | head -1)
          echo "url=$URL" >> $GITHUB_OUTPUT

      - name: 测试部署
        run: |
          curl -f -H "Authorization: Bearer ${{ secrets.API_TOKEN }}" "${{ steps.deployment.outputs.url }}/list" || echo "测试失败，请手动验证"

      - name: 部署通知
        if: success()
        run: |
          echo "🎉 图床服务部署成功！"
          echo "访问地址: ${{ steps.deployment.outputs.url }}/new"
          echo "API Token: ${{ secrets.API_TOKEN }}"
          echo "用户名: ${{ secrets.USERNAME }}"
          echo "密码: ${{ secrets.PASSWORD }}"